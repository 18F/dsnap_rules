# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.6
        environment:
            DATABASE_URL: postgresql://postgres@localhost/dsnap

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/postgres:9.6.11
        environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: dsnap

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Pipfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            pipenv install

      - run:
          name: Install cf cli
          command: |
            mkdir -p $HOME/bin
            export PATH=$HOME/bin:$PATH
            curl -L "https://cli.run.pivotal.io/stable?release=linux64-binary" | tar xzv -C $HOME/bin
            cf install-plugin autopilot -f -r CF-Community

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: run tests
          command: |
            pipenv run pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: Deploy to dev
          command: |
            if [[ "${CIRCLE_BRANCH}" != "master" ]]; then
              export PATH=$HOME/bin:$PATH
              cf login -a https://api.fr.cloud.gov -u $CF_DSNAP_DEV_USER -p $CF_DSNAP_DEV_PASS -o gsa-10x-prototyping -s dsnap_dev
              cf zero-downtime-push dsnap_rules -f manifests/manifest_dev.yml
            fi
      - run:
          name: Deploy to staging
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" && -z "${CIRCLE_TAG}" ]]; then
              export PATH=$HOME/bin:$PATH
              cf login -a https://api.fr.cloud.gov -u $CF_DSNAP_STAGING_USER -p $CF_DSNAP_STAGING_PASS -o gsa-10x-prototyping -s dsnap_staging
              cf zero-downtime-push dsnap_rules -f manifests/manifest_staging.yml
            fi
      - run:
          name: Deploy to prod and demo
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" && ! -z "${CIRCLE_TAG}" ]]; then
              export PATH=$HOME/bin:$PATH
              cf login -a https://api.fr.cloud.gov -u $CF_DSNAP_PROD_USER -p $CF_DSNAP_PROD_PASS -o gsa-10x-prototyping -s dsnap_prod
              cf zero-downtime-push dsnap_rules -f manifests/manifest_staging.yml
              cf login -a https://api.fr.cloud.gov -u $CF_DSNAP_DEMO_USER -p $CF_DSNAP_DEMO_PASS -o gsa-10x-prototyping -s dsnap_demo
              cf zero-downtime-push dsnap_rules -f manifests/manifest_staging.yml
            fi
